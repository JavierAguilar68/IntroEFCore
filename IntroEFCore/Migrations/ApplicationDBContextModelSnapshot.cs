// <auto-generated />
using System;
using IntroEFCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntroEFCore.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeneroPelicula", b =>
                {
                    b.Property<int>("GenerosId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculasId")
                        .HasColumnType("int");

                    b.HasKey("GenerosId", "PeliculasId");

                    b.HasIndex("PeliculasId");

                    b.ToTable("GeneroPelicula");

                    b.HasData(
                        new
                        {
                            GenerosId = 1004,
                            PeliculasId = 6
                        },
                        new
                        {
                            GenerosId = 1004,
                            PeliculasId = 7
                        },
                        new
                        {
                            GenerosId = 1003,
                            PeliculasId = 7
                        });
                });

            modelBuilder.Entity("IntroEFCore.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<decimal>("Fortuna")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Actores");

                    b.HasData(
                        new
                        {
                            Id = 1005,
                            FechaNacimiento = new DateTime(1948, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fortuna = 5700000m,
                            Nombre = "Samuel L. Jackson"
                        },
                        new
                        {
                            Id = 1006,
                            FechaNacimiento = new DateTime(1967, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fortuna = 17000000m,
                            Nombre = "Mark Ruffalo"
                        });
                });

            modelBuilder.Entity("IntroEFCore.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<bool>("Recomendar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaId");

                    b.ToTable("Comentarios");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Contenido = "El principio de una gran saga",
                            PeliculaId = 7,
                            Recomendar = true
                        },
                        new
                        {
                            Id = 2,
                            Contenido = "Demasiado loca, no debieron hacerla",
                            PeliculaId = 6,
                            Recomendar = true
                        });
                });

            modelBuilder.Entity("IntroEFCore.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1005,
                            Nombre = "Policiaca"
                        },
                        new
                        {
                            Id = 1006,
                            Nombre = "Guerra"
                        });
                });

            modelBuilder.Entity("IntroEFCore.Models.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EnCines")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEstreno")
                        .HasColumnType("date");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.HasKey("Id");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            EnCines = false,
                            FechaEstreno = new DateTime(2022, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Spider-Man: Across the Spider-Verse (Part One)"
                        },
                        new
                        {
                            Id = 7,
                            EnCines = false,
                            FechaEstreno = new DateTime(2001, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Harry Potter y la piedra filosofal"
                        });
                });

            modelBuilder.Entity("IntroEFCore.Models.PeliculaActor", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Personaje")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ActorId", "PeliculaId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("PeliculaActores");

                    b.HasData(
                        new
                        {
                            ActorId = 1005,
                            PeliculaId = 6,
                            Orden = 4,
                            Personaje = "Nick Fury"
                        },
                        new
                        {
                            ActorId = 1006,
                            PeliculaId = 6,
                            Orden = 3,
                            Personaje = "Bruce Banner"
                        },
                        new
                        {
                            ActorId = 1007,
                            PeliculaId = 7,
                            Orden = 1,
                            Personaje = "Harry Potter"
                        },
                        new
                        {
                            ActorId = 1008,
                            PeliculaId = 7,
                            Orden = 2,
                            Personaje = "Ron Weasley"
                        });
                });

            modelBuilder.Entity("GeneroPelicula", b =>
                {
                    b.HasOne("IntroEFCore.Models.Genero", null)
                        .WithMany()
                        .HasForeignKey("GenerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntroEFCore.Models.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("PeliculasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntroEFCore.Models.Comentario", b =>
                {
                    b.HasOne("IntroEFCore.Models.Pelicula", "Pelicula")
                        .WithMany("Comentarios")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("IntroEFCore.Models.PeliculaActor", b =>
                {
                    b.HasOne("IntroEFCore.Models.Actor", "Actor")
                        .WithMany("PeliculaActores")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntroEFCore.Models.Pelicula", "Pelicula")
                        .WithMany("PeliculaActores")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("IntroEFCore.Models.Actor", b =>
                {
                    b.Navigation("PeliculaActores");
                });

            modelBuilder.Entity("IntroEFCore.Models.Pelicula", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("PeliculaActores");
                });
#pragma warning restore 612, 618
        }
    }
}
